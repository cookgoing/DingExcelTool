using System.IO;
using System.Linq;
using System.Collections.Generic;
using UnityEngine;
using Google.Protobuf;
using DingFrame.Module;
using DingFrame.Module.AssetLoader;

namespace Business.Data.Excel
{
    public class {scriptName}
    {
        public static {scriptName} Ins{get; private set;}

        public {messageName}[] Datas{get; private set;}
        {dicFieldSB}

        public static {scriptName} CreateIns()
        {
            if (Ins != null) return Ins;

            Ins = new {scriptName}();
            Ins.ParseProto();
            Ins.GenerateKV();
            return Ins;
        }

        public static void ReleaseIns() => Ins = null;

        private void ParseProto()
        {
            string protoDataPath = Path.Combine(GameConfigure.ExcelProtoDataPath, "{dataFileName}");
            AssetLoadModule assetModule = ModuleCollector.GetModule<AssetLoadModule>();
            byte[] serializedData = assetModule.Load<TextAsset>(protoDataPath)?.bytes;
            {excelListScriptName} msgList = {excelListScriptName}.Parser.ParseFrom(serializedData);

            Datas = msgList.{excelListScriptPropertyName}.ToArray();
        }

        private void GenerateKV()
        {
            foreach({messageName} item in Datas)
            {
                {classificationActionSB}
            }
        }
    }
}